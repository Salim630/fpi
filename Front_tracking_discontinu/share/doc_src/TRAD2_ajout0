postraitement_ft_lata postraitement_base postraitement_ft_lata 0 not_set
  attr bloc chaine bloc 0 not_set
rk3_ft runge_kutta_ordre_3 rk3_ft -1 Keyword for Runge Kutta time scheme for Front_Tracking calculation.
paroi_ft_disc condlim_base paroi_ft_disc 0 Boundary condition for Front-Tracking problem in the discontinuous version.
  attr type paroi_ft_disc_deriv type 0 Symetrie condition.
paroi_ft_disc_constant paroi_ft_disc_deriv constant 0 condition contact angle fidex. The angle is measured between the wall and the interface in the phase 0.
  attr ch front_field_base ch 0 Boundary field type.
paroi_echange_contact_vdf_ft paroi_echange_contact_vdf paroi_echange_contact_vdf_ft -1 This boundary condition is used between a conduction problem and a thermohydraulic problem with two phases flow (Front-Tracking method) to modelize heat exchange.
milieu_v2_base objet_u milieu_v2_base -1 Basic class for medium (physics properties of medium) composed of constituents (fluids and solids).
fluide_diphasique milieu_v2_base fluide_diphasique 0 Two-phase fluid.
  attr bloc bloc_lecture bloc 0 Two-phase fluid description.
  ref gravite field_base
vitesse_imposee methode_transport_deriv vitesse_imposee -1 Class to specify that the speed of displacement of the nodes of the interfaces is imposed with an analytical formula.
  attr val listchainef val 0 Analytical formula.
vitesse_interpolee methode_transport_deriv vitesse_interpolee -1 Class to specify that the interpolation will use the velocity field of the Navier-Stokes equation named val to compute the speed of displacement of the nodes of the interfaces.
  attr val chaine val 0 Navier-Stokes equation.
bloc_lecture_remaillage objet_lecture nul 1 Parameters for remeshing.
  attr pas floattant pas 1 This keyword has default value -1.; when it is set to a negative value there is no remeshing. It is the time step in second (physical time) between two operations of remeshing.
  attr pas_lissage floattant pas_lissage 1 This keyword has default value -1.; when it is set to a negative value there is no smoothing of mesh. It is the time step in second (physical time) between two operations of smoothing of the mesh.
  attr nb_iter_remaillage entier nb_iter_remaillage 1 This keyword has default value 0; when it is set to the zero value there is no remeshing. It is the number of iterations performed during a remeshing process.
  attr nb_iter_barycentrage entier nb_iter_barycentrage 1 This keyword has default value 0; when it is set to the zero value there is no operation of barycentrage. The barycentrage operation consists in moving each node of the mesh tangentially to the mesh surface and in a direction that let it closer the center of gravity of its neighbors. If relax_barycentrage is set to 1, the node is move to the center of gravity. For values lower than unity, the motion is limited to the corresponding fraction. The parameter nb_iter_barycentrage is the number of iteration of these node displacements.
  attr relax_barycentrage floattant relax_barycentrage 1 This keyword has default value 0; when it is set to the zero value there is no motion of the nodes. When 0 < relax_barycentrage <= 1, this parameter provides the relaxation ratio to be used in the barycentrage operation described for the keyword nb_iter_barycentrage.
  attr critere_arete floattant critere_arete 1 This keyword is used to compute two sub-criteria : the minimum and the maximum edge length ratios used in the process of obtaining edges of length close to critere_longueur_fixe. Their respective values are set to (1-critere_arete)**2 and (1+critere_arete)**2. The default values of the minimum and the maximum are set respectively to 0.5 and 1.5. When an edge is longer than critere_longueur_fixe*(1+critere_arete)**2, the edge is cut into two pieces; when its length is smaller than critere_longueur_fixe*(1-critere_arete)**2, this edge has to be suppressed.
  attr critere_remaillage floattant critere_remaillage 1 This keyword was previously used to compute two sub-criteria : the minimum and the maximum length used in the process of remeshing. Their respective values are set to (1-critere_remaillage)**2 and (1+critere_remaillage)**2. The default values of the minimum and the maximum are set respectively to 0.2 and 1.7. There are currently not used in data files.
  attr impr floattant impr 1 This keyword is followed by a value that specify the printing time period given. The default value is -1, which means no printing.
  attr facteur_longueur_ideale floattant facteur_longueur_ideale 1 This keyword is used to set a ratio between edge length and the cube root of volume cell for the remeshing process. The default value is 1.0.
  attr nb_iter_correction_volume entier nb_iter_correction_volume 1 This keyword give the maximum number of iterations to be performed trying to satisfy the criterion seuil_dvolume_residuel. The default value is 0, which means no iteration.
  attr seuil_dvolume_residuel floattant seuil_dvolume_residuel 1 This keyword give the error volume (in m3) that is accepted to stop the iterations performed to keep the volume constant during the remeshing process. The default value is 0.0.
  attr lissage_courbure_coeff floattant lissage_courbure_coeff 1 This keyword is used to specify the diffusion coefficient used in the diffusion process of the curvature in the curvature smoothing process with a time step. The default value is 0.05. That value usually provides a stable process. Too small values do not stabilize enough the interface, especially with several Lagrangian nodes per Eulerian cell. Too high values induce an additional macroscopic smoothing of the interface that should physically come from the surface tension and not from this numerical smoothing.
  attr lissage_courbure_iterations entier lissage_courbure_iterations 1 This keyword is used to specify the number of iterations to perform the curvature smoothing process. The default value is 1.
  attr lissage_courbure_iterations_systematique entier lissage_courbure_iterations_systematique 1 These keywords allow a finer control than the previous lissage_courbure_iterations keyword. N1 iterations are applied systematically at each timestep. For proper DNS computation, N1 should be set to 0.
  attr lissage_courbure_iterations_si_remaillage entier lissage_courbure_iterations_si_remaillage 1 N2 iterations are applied only if the local or the global remeshing effectively changes the lagrangian mesh connectivity.
  attr critere_longueur_fixe floattant critere_longueur_fixe 1 This keyword is used to specify the ideal edge length for a remeshing process. The default value is -1., which means that the remeshing does not try to have all edge lengths to tend towards a given value.
convection_diffusion_concentration_ft_disc convection_diffusion_concentration convection_diffusion_concentration_ft_disc -1 not_set
  attr equation_interface chaine equation_interface 1 his is the name of the interface tracking equation to watch. The scalar will not diffuse through the interface of this equation.
  attr phase entier(into=[0,1]) phase 0 tells whether the scalar must be confined in phase 0 or in phase 1
  attr option chaine option 1 Experimental features used to prevent the concentration to leak through the interface between phases due to numerical diffusion. NL2 RIEN: do nothing NL2 RAMASSE_MIETTES_SIMPLE: at each timestep, this algorithm takes all the mass located in the opposite phase and spreads it uniformly in the given phase.
objet_lecture_maintien_temperature objet_lecture nul 0 not_set
  attr sous_zone ref_sous_zone sous_zone 0 not_set
  attr temperature_moyenne floattant temperature_moyenne 0 not_set
convection_diffusion_temperature_ft_disc convection_diffusion_temperature convection_diffusion_temperature_ft_disc -1 not_set
  attr equation_interface chaine equation_interface 1 The name of the interface equation should be given.
  attr phase entier(into=[0,1]) phase 0 Phase in which the temperature equation will be solved. The temperature, which may be postprocessed with the keyword temperature_EquationName, in the orther phase may be negative: the code only computes the temperature field in the specified phase. The other phase is supposed to physically stay at saturation temperature. The code uses a ghost fluid numerical method to work on a smooth temperature field at the interface. In the opposite phase (1-X) the temperature will therefore be extrapolated in the vicinity of the interface and have the opposite sign, saturation temperature is zero by convention).
  attr equation_navier_stokes chaine equation_navier_stokes 1 The name of the Navier Stokes equation of the problem should be given.
  attr stencil_width entier stencil_width 1 distance in mesh elements over which the temperature field should be extrapolated in the opposite phase.
  attr maintien_temperature objet_lecture_maintien_temperature maintien_temperature 1 maintien_temperature SOUS_ZONE_NAME VALUE : experimental, this acts as a dynamic source term that heats or cools the fluid to maintain the average temperature to VALUE within the specified region. At this time, this is done by multiplying the temperature within the SOUS_ZONE by an appropriate uniform value at each timestep. This feature might be implemented in a separate source term in the future.
interpolation_champ_face_deriv objet_lecture interpolation_champ_face_deriv -1 not_set
interpolation_champ_facebase interpolation_champ_face_deriv base 0 not_set
interpolation_champ_face_lineaire interpolation_champ_face_deriv lineaire 1 not_set
  attr vitesse_fluide_explicite rien vitesse_fluide_explicite 1 not_set
parcours_interface objet_lecture nul 1 allows you to configure the algorithm that computes the surface mesh to volume mesh intersection. This algorithm has some serious trouble when the surface mesh points coincide with some faces of the volume mesh. Effects are visible on the indicator function, in VDF when a plane interface coincides with a volume mesh surface.NL2 To overcome these problems, the keyword correction_parcours_thomas keyword can be used: it allows the algorithm to slightly move some mesh points. This algorithm, which is experimental and is NOT activated by default, triggers a correction that avoids some errors in the computation of the indicator function for surface meshes that exactly cross some eulerian mesh edges (strongly suggested !).
  attr correction_parcours_thomas rien correction_parcours_thomas 1 not_set
transport_interfaces_ft_disc eqn_base transport_interfaces_ft_disc -1 Interface tracking equation for Front-Tracking problem in the discontinuous version.
  attr conditions_initiales|initial_conditions bloc_lecture conditions_initiales 1 The keyword conditions_initiales is used to define the shape of the initial interfaces through the zero level-set of a function, or through a mesh fichier_geom. Indicator function is set to 0, that is fluide0, where the function is negative; indicator function is set to 1, that is fluide1, where the function is positive; the interfaces are the level-set 0 of that function: NL2 NL2 conditions_initiales { fonction NL2 $(-((x-0.002)^2+(y-0.002)^2+z^2-(0.00125)^2))*((x-0.005)^2+(y-0.007)^2+z^2 (0.00150)^2))*(0.020-z))$ NL2 } NL2 NL2 In the above example, there are three interfaces: two bubbles in a liquid with a free surface. One bubble has a radius of 0.00125, i.e. 1.25 mm, and its center is {0.002, 0.002, 0.000}. The other bubble has a radius of 0.00150, i.e. 1.5 mm, and its center is {0.005, 0.007, 0.000}. The free surface is above the two bubble, at a level z=0.02. NL2 NL2 Additional feature in this block concerns the keywords ajout_phase0 and ajout_phase1. They can be used to simplify the composition of different interfaces. When using these keywords, the initial function defines the indicator function; ajout_phase0 and ajout_phase1 are used to modify this initial field. Each time ajout_phase0 is used, the field is untouched where the function is positive whereas the indicator field is set to 0 where the function is negative. The keyword ajout_phase1 has the symmetrical use, keeping the field value where the function is negative and setting the indicator field to 1 where the function is positive. The previous example can also be written: NL2 NL2 conditions_initiales { NL2 fonction z-0.020 , NL fonction ajout_phase1 $(x-0.002)^2+(y-0.002)^2+z^2-(0.00125)^2$ , NL2 fonction ajout_phase1 $(x-0.005)^2+(y-0.007)^2+z^2-(0.00150)^2$ NL2 }
  attr methode_transport methode_transport_deriv methode_transport 1 Method of transport of interface.
  attr iterations_correction_volume entier iterations_correction_volume 1 Keyword to specify the number or iterations requested for the correction process that can be used to keep the volume of the phases constant during the transport process.
  attr n_iterations_distance entier n_iterations_distance 1 Keyword to specify the number or iterations requested for the smoothing process of computing the field corresponding to the signed distance to the interfaces and located at the center of the Eulerian elements. This smoothing is necessary when there are more Lagrangian nodes than Eulerian two-phase cells.
  attr maillage chaine maillage 1 This optional block is used to specify that we want a Gnuplot drawing of the initial mesh. There is only one keyword, niveau_plot, that is used only to define if a Gnuplot drawing is active (value 1) or not active (value -1). By default, skipping the block will produce non Gnuplot drawing. This option is to be used only in a debug process.
  attr remaillage bloc_lecture_remaillage remaillage 1 This block is used to specify the operations that are used to keep the solid interfaces in a proper condition. The remaillage block only contains parameter\'s values.
  attr collisions chaine collisions 1 This block is used to specify the operations that are used when a collision occurs between two parts of interfaces. When this occurs, it is necessary to build a new mesh that has locally a clear definition of what is inside and what is outside of the mesh. The collisions can either be active or inactive. If the collisions are active (highly recommended), the keyword juric_pour_tout indicates that the Juric level-set reconstruction method will be used to re-create the new mesh after each coalescence or breakup. The next line (type_remaillage) is used to state whose field will be used for the level-set computation. Main option is Juric, a remeshing that is compatible with parallel computing. When using Juric level-set remeshing, the source field (source_isovaleur) that is used to compute the level-sets is then defined. It can be either the indicator function (indicatrice), a choice which is the default one and the most robust, or a geometrical distance computed from the mesh at the beginning of the time step (fonction_distance), a choice that may be more accurate in specific situations.NL2 Type_remaillage Thomas is an enhancement of the Juric global remeshing algorithm designed to compensate for mass loss during remeshing. The mesh is always reconstructed with the indicator function (not with the distance function). After having reconstructed the mesh with the Juric algorithm, the difference between the old indicator function (before remeshing) and the new indicator function is computed. The differences occuring at a distance below or equal to N elements from the interface are summed up and used to move the interface in the normal direction. The displacement of the interface is such that the volume of each phase after displacement is equal to the volume of the phase before remeshing. N (default value 1) must be smaller than n_iterations_distance (suggested value: 2). NL2 An alternate choice for the remeshing type (type_remaillage) is collision_seq, which is more complex and tries to sew the two meshes that have collided, once the collision zone has been removed. This algorithm does not work in parallel computation.
  attr methode_interpolation_v chaine(into=["valeur_a_elem","vdf_lineaire"]) methode_interpolation_v 1 In this block, two keywords are possible for method to select the way the interpolation is performed. With the choice valeur_a_elem the speed of displacement of the nodes of the interfaces is the velocity at the center of the Eulerian element in which each node is located at the beginning of the time step. This choice is the default interpolation method. The choice VDF_lineaire is only available with a VDF discretization (VDF). In this case, the speed of displacement of the nodes of the interfaces is linearly interpolated on the 4 (in 2D) or the 6 (in 3D) Eulerian velocities closest the location of each node at the beginning of the time step. In peculiar situation, this choice may provide a better interpolated value. Of course, this choice is not available with a VEF discretization (VEFPreP1B).
  attr volume_impose_phase_1 floattant volume_impose_phase_1 1 this keyword is used to specify the volume of one phase to keep the volume of the phases constant during the remeshing process. It is an alternate solution to trouble in mass conservation. This option is mainly realistic when only one inclusion of phase 1 is present in the domain. In most other situations, the iterations_correction_volume keyword seems easier to justify. The volume to be keep is in m3 and should agree with initial condition.
  attr parcours_interface parcours_interface parcours_interface 1 Parcours_interface allows you to configure the algorithm that computes the surface mesh to volume mesh intersection. This algorithm has some serious trouble when the surface mesh points coincide with some faces of the volume mesh. Effects are visible on the indicator function, in VDF when a plane interface coincides with a volume mesh surface. NL2 To overcome these problems, the keyword correction_parcours_thomas keyword can be used: it allows the algorithm to slightly move some mesh points. This algorithm is experimental and is NOT activated by default.
  attr interpolation_repere_local rien interpolation_repere_local 1 Triggers a new transport algorithm for the interface: the velocity vector of lagrangian nodes is computed in the moving frame of reference of the center of each connex component, in such a way that relative displacements of nodes within a connex component of the lagrangian mesh are minimized, hence reducing the necessity of barycentering, smooting and local remeshing. Very efficient for bubbly flows.
  attr interpolation_champ_face interpolation_champ_face_deriv interpolation_champ_face 1 It is possible to compute the imposed velocity for the solid-fluid interface by direct affectation (interpolation_scheme would be set to base) or by multi-linear interpolation (interpolation_scheme would be set to lineaire). The default value is base.
  attr n_iterations_interpolation_ibc entier n_iterations_interpolation_ibc 1 Useful only with interpolation_champ_face positioned to lineaire. Set the value concerning the width of the region of the linear interpolation. For the Penalized Direct Forcing model, a value equals to 1 is enough.
  attr type_vitesse_imposee chaine(into=["uniforme","analytique"]) type_vitesse_imposee 1 Useful only with interpolation_champ_face positioned to lineaire. Value of the keyword is uniforme (for an uniform solid-fluide interface\'s velocity, i.e. zero for instance) or analytique (for an analytic expression of the solid-fluide interface\'s velocity depending on the spatial coordinates). The default value is uniforme.
  attr nombre_facettes_retenues_par_cellule entier nombre_facettes_retenues_par_cellule 1 Keyword to specify the default number (3) of facets per cell used to describe the geometry of the solid-solid interface. This number should be increased if the geometry of the solid-solid interface is complex in each cell (eulerian mesh too coarse for example).
  attr seuil_convergence_uzawa floattant seuil_convergence_uzawa 1 Optional option to change the default value (10-8) of the threshold convergence for the Uzawa algorithm if used in the Penalized Direct Forcing model. Sometime, the value should be decreased to insure a better convergence to force equality between sequential and parallel results.
  attr nb_iteration_max_uzawa entier nb_iteration_max_uzawa 1 Optional option to change the default value (10-8) of the threshold convergence for the Uzawa algorithm if used in the Penalized Direct Forcing model. Sometime, the value should be decreased to insure a better convergence to force equality between sequential and parallel results.
  attr injecteur_interfaces chaine injecteur_interfaces 1 not_set
  attr vitesse_imposee_regularisee entier vitesse_imposee_regularisee 1 not_set
  attr indic_faces_modifiee bloc_lecture indic_faces_modifiee 1 not_set
  attr distance_projete_faces chaine(into=["simplifiee","initiale","modifiee"]) distance_projete_faces 1 not_set
sortie_libre_rho_variable condlim_base sortie_libre_rho_variable 0 Class to define an outlet boundary condition at which the pressure is defined through the given field, whereas the density of the two-phase flow may varies (value of P/rho given in Pa/kg.m-3).
  attr ch front_field_base ch 0 Boundary field type.
injection_marqueur objet_lecture nul -1 not_set
  attr ensemble_points bloc_lecture ensemble_points 0 not_set
  attr proprietes_particules bloc_lecture proprietes_particules 0 not_set
  attr t_debut_injection floattant t_debut_injection 1 not_set
  attr dt_injection floattant dt_injection 1 not_set
transport_marqueur_ft eqn_base transport_marqueur_ft -1 not_set
  attr conditions_initiales|initial_conditions bloc_lecture conditions_initiales 1 ne semble pas standard
  attr injection injection_marqueur injection 1 The keyword injection can be used to inject periodically during the calculation some other particles. The syntax for ensemble_points and proprietes_particles is the same than the initial conditions for the particles. The keyword t_debut_injection give the injection initial time (by default, given by t_debut_integration) and dt_injection gives the injection time period (by default given by dt_min).
  attr transformation_bulles bloc_lecture transformation_bulles 1 This keyword will activate the transformation of an inclusion (small bubbles) into a particle. localisation gives the sub-zones (N number of sub-zones and their names) where the transformation may happen. The diameter size for the inclusion transformation is given by either diameter_min option, in this case the inclusion will be suppressed for a diameter less than diameter_size, either by the beta_transfo option, in this case the inclusion will be suppressed for a diameter less than diameter_size*cell_volume (cell_volume is the volume of the cell containing the inclusion). interface specifies the name of the inclusion interface and t_debut_transfo is the beginning time for the inclusion transformation operation (by default, it is t_debut_integr value) and dt_transfo is the period transformation (by default, it is dt_min value). In a two phase flow calculation, the particles will be suppressed when entring into the non marked phase
  attr phase_marquee entier phase_marquee 1 Phase number giving the marked phase, where the particles are located (when they leave this phase, they are suppressed). By default, for a the two phase fluide, the particles are supposed to be into the phase 0 (liquid).
  attr methode_transport chaine(into=["vitesse_interpolee","vitesse_particules"]) methode_transport 1 Kind of transport method for the particles. With vitesse_interpolee, the velocity of the particles is the velocity a fluid interpolation velocity (option by default). With vitesse_particules, the velocity of the particules is governed by the resolution of a momentum equation for the particles.
  attr methode_couplage chaine(into=["suivi","one_way_coupling","two_way_coupling"]) methode_couplage 1 Way of coupling between the fluid and the particles. By default, (keyword suivi), there is no interaction between both. With one_way_coupling keyword, the fluid act on the particles. With two_way_coupling keyword, besides, particles act on the fluid.
  attr nb_iterations entier nb_iterations 1 Number of sub-timesteps to solve the momentum equation for the particles (1 per default).
  attr contribution_one_way entier(into=[0,1]) contribution_one_way 1 Activate (1, default) or not (0) the fluid forces on the particles when one_way_coupling or two_way_coupling coupling method is used.
  attr implicite entier(into=[0,1]) implicite 1 Impliciting (1) or not (0) the time scheme when weight added source term is used in the momentum equation
penalisation_forcage objet_lecture nul 1 penalisation_forcage
  attr pression_reference floattant pression_reference 1 not_set
  attr domaine_flottant_fluide listf domaine_flottant_fluide 1 not_set
navier_stokes_ft_disc navier_stokes_turbulent navier_stokes_ft_disc -1 Two-phase momentum balance equation.
  attr equation_interfaces_proprietes_fluide chaine equation_interfaces_proprietes_fluide 1 This keyword is used for liquid-gas, liquid-vapor and fluid-fluid deformable interface, which transported at the Eulerian velocity. When this case is selected, the keyword sequence Methode_transport vitesse_interpolee is used in the block Transport_Interfaces_FT_Disc to define the velocity field for the displacement of the interface.
  attr equation_interfaces_vitesse_imposee chaine equation_interfaces_vitesse_imposee 1 This keyword is used to specify the velocity field to be used when using an interface that mimics a solid interface moving with a given solid speed of displacement. When this case is selected, the keyword sequence Methode_transport vitesse_imposee in the Transport_Interfaces_FT_Disc block will define the velocity field for the displacement of the interface.
  attr equations_interfaces_vitesse_imposee listchaine equations_interfaces_vitesse_imposee 1 This keyword is used to specify the velocity field to be used when using an interface that mimics a solid interface moving with a given solid speed of displacement. When this case is selected, the keyword sequence Methode_transport vitesse_imposee in the Transport_Interfaces_FT_Disc block will define the velocity field for the displacement of the interface. If two or more solid interfaces are defined, then the keyword equations_interfaces_vitesse_imposee should be used.
  attr clipping_courbure_interface entier clipping_courbure_interface 1 This keyword is used to numerically limit the values of curvature used in the momentum balance equation. Curvature is computed as usual, but values exceeding the clipping value are replaced by this threshold, before using the clipped curvature in the momentum balance. Each time a curvature value is clipped, a counter is increased by one unity and the value of the counter is written in the .err file at the end of the time step. This clipping allows not reducing drastically the time stepping when a geometrical singularity occurs in the interface mesh. However, physical phenomena may be concealed with the use of such a clipping.
  attr terme_gravite chaine(into=["rho_g","grad_i"]) terme_gravite 1 The Terme_gravite keyword changes the numerical scheme used for the gravity source term. The default is grad_i, which is designed to remove spurious currents around the interface. In this case, the pressure field does not contain the hydrostatic part but only a jump across the interface. This scheme seems not to work very well in vef. The rho_g option uses the more traditional source term, equal to rho*g in the volume. In this case, the hydrostatic pressure is visible in the pressure field and the boundary conditions in pressure must be set accordingly. This model produces spurious currents in the vicinity of the fluid-fluid interfaces and with the immersed boundary conditions.
  attr equation_temperature_mpoint chaine equation_temperature_mpoint 1 The equation_temperature_mpoint should be used in the case of liquid-vapor flow with phase-change (see the TRUST_ROOT/doc/TRUST/ft_chgt_phase.pdf written in French for more information about the model). The name of the temperature equation, defined with the convection_diffusion_temperature_ft_disc keyword, should be given.
  attr matrice_pression_invariante rien matrice_pression_invariante 1 This keyword is a shortcut to be used only when the flow is a single-phase one, with interface tracking only used for solid-fluid interfaces. In this peculiar case, the density of the fluid does not evolve during the computation and the pressure matrix does not need to be actuated at each time step.
  attr penalisation_forcage penalisation_forcage penalisation_forcage 1 This keyword is used to specify a strong formulation (value set to 0) or a weak formulation (value set to 1) for an imposed pressure boundary condition. The first formulation converges quicker and is stable in general cases except some rare cases (see Ecoulement_Neumann test case for example) where the second one should be used despite of its slow convergence.
  attr equation_temperature_mpoint_vapeur chaine equation_temperature_mpoint_vapeur 1 not_set
  attr mpoint_inactif_sur_qdm rien mpoint_inactif_sur_qdm 1 not_set
  attr mpoint_vapeur_inactif_sur_qdm rien mpoint_vapeur_inactif_sur_qdm 1 not_set
source_trainee source_base trainee 0 drag effect
source_flottabilite source_base flottabilite 0 buoyancy effect
source_masse_ajoutee source_base masse_ajoutee 0 weight added effect
probleme_ft_disc_gen problem_read_generic probleme_ft_disc_gen -1 The generic Front-Tracking problem in the discontinuous version. It differs from the rest of the TRUST code : The problem does not state the number of equations that are enclosed in the problem. Two equations are compulsory : a momentum balance equation (alias Navier-Stokes equation) and an interface tracking equation. The list of equations to be solved is declared in the beginning of the data file. Another difference with more classical TRUST data file, lies in the fluids definition. The two-phase fluid (Fluide_Diphasique) is made with two usual single-phase fluids (Fluide_Incompressible). As the list of equations to be solved in the generic Front-Tracking problem is declared in the data file and not pre-defined in the structure of the problem, each equation has to be distinctively associated with the problem with the Associer keyword.
  ref mm milieu_v2_base
  ref chimie chimie
  ref constituant constituant
